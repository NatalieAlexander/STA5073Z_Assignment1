"0",""
"0","#empty data frame to store results for each combination of parameters above"
"0","results <<- data.frame(ntree = integer(),"
"0","                      train_accuracy = double(), valid_accuracy = double(),"
"0","                      train_recall = double(), valid_recall = double(),"
"0","                      train_ppv = double(), valid_ppv = double(),"
"0","                      train_f1 = double(), valid_f1 = double())"
"0",""
"0","#grid search"
"0","ntrees_grid = c(100, 500, 1000)"
"0",""
"0","#number of folds"
"0","num_folds <- 5"
"0",""
"0","#create folds"
"0","set.seed(123)"
"0","folds <- createFolds(df_train$president_label, k = num_folds, list = TRUE)"
"0",""
"0","###########################################"
"0",""
"0","#gridsearch"
"0","for (ntree in ntrees_grid) {"
"0","  "
"0","  #empty vectors for results at each fold..."
"0","  train_accuracy_values <- numeric(num_folds)"
"0","  valid_accuracy_values <- numeric(num_folds)"
"0","  "
"0","  train_recall_values <- numeric(num_folds)"
"0","  valid_recall_values <- numeric(num_folds)"
"0","  "
"0","  train_ppv_values <- numeric(num_folds)"
"0","  valid_ppv_values <- numeric(num_folds)"
"0","  "
"0","  train_f1_values <- numeric(num_folds)"
"0","  valid_f1_values <- numeric(num_folds)"
"0",""
"0",""
"0"," ###########################################"
"0",""
"0","  #for each fold..."
"0","  for (fold in 1:num_folds) {"
"0","  "
"0","    #split data into k-fold train and validation sets"
"0","    train_indices <- unlist(folds[-fold]) #all folds except 1 fold"
"0","    valid_indices <- unlist(folds[fold]) #only 1 fold"
"0","    "
"0","    df_train_fold <- df_train[train_indices, ]"
"0","    df_valid_fold <- df_train[valid_indices, ]"
"0","  "
"0","    ###########################################"
"0","    "
"0","    #fit the model at current fold"
"0","    set.seed(123)"
"0","    rf_fit <- randomForest(as.factor(president_label) ~ ., data=df_train_fold,"
"0","                       ntree = 500,  #no improvement at ntree=200 or ntree= 500"
"0","                        importance = TRUE,"
"0","                       na.action=na.exclude,"
"0","                        do.trace = 25)"
"0","  "
"0","   ###########################################"
"0","  "
"0","    # Predict on train data"
"0","    set.seed(123)"
"0","    fittedtrain <- unname(predict(rf_fit, type = 'class'))"
"0","  "
"0","    # Train confusion matrix"
"0","    train_conf_mat <- confusionMatrix(data=fittedtrain, #predicted"
"0","                                      reference=as.factor(df_train_fold$president_label), #true"
"0","                                      mode = ""everything"") #all metrics"
"0","  "
"0","    #ensure Nan and NA values are 0"
"0","    train_conf_mat$byClass[is.na(train_conf_mat$byClass)] <- 0"
"0","    train_conf_mat$byClass[is.nan(train_conf_mat$byClass)] <- 0"
"0","  "
"0","    # Compute the average train accuracy"
"0","    train_accuracy_values[fold] <- round(train_conf_mat$overall['Accuracy'], 3)"
"0","  "
"0","    # Compute the average train recall"
"0","    train_recall_values[fold] <- round(mean(train_conf_mat$byClass[,'Sensitivity']), 3)"
"0","  "
"0","    # Compute the average train positive predictive value or ""precision"""
"0","    train_ppv_values[fold] <- round(mean(train_conf_mat$byClass[,'Pos Pred Value']), 3)"
"0","  "
"0","    # Compute the average train F1-score"
"0","    train_f1_values[fold] <- round(mean(train_conf_mat$byClass[,'F1']), 3)"
"0","  "
"0","    ###########################################"
"0","  "
"0","    # Predict on validation data"
"0","    set.seed(123)"
"0","    fittedvalid <- unname(predict(rf_fit, df_valid_fold, type = 'class'))"
"0","  "
"0","    # validation set confusion matrix"
"0","    valid_conf_mat <- confusionMatrix(data=fittedvalid, #fitted"
"0","                                      reference=as.factor(df_valid_fold$president_label), #true"
"0","                                      mode = ""everything"") #all metrics"
"0","  "
"0","    #ensure Nan and NA values are 0"
"0","    valid_conf_mat$byClass[is.na(valid_conf_mat$byClass)] <- 0"
"0","    valid_conf_mat$byClass[is.nan(valid_conf_mat$byClass)] <- 0"
"0","  "
"0","    # Compute the average validation accuracy"
"0","    valid_accuracy_values[fold] <- round(valid_conf_mat$overall['Accuracy'], 3)"
"0","  "
"0","    # Compute the average validation  recall"
"0","    valid_recall_values[fold] <- round(mean(valid_conf_mat$byClass[,'Sensitivity']), 3)"
"0","  "
"0","    # Compute the average validation positive predictive value or ""precision"""
"0","    valid_ppv_values[fold] <- round(mean(valid_conf_mat$byClass[,'Pos Pred Value']), 3)"
"0","  "
"0","    # Compute average validation F1-score"
"0","    valid_f1_values[fold] <- round(mean(valid_conf_mat$byClass[,'F1']), 3)"
"0","  "
"0","  }"
"0","###########################################"
"0","  "
"0","  # Calculate the mean results across all folds"
"0","  "
"0","  ##average accuracy"
"0","  mean_train_accuracy <- mean(train_accuracy_values) #train"
"0","  mean_valid_accuracy <- mean(valid_accuracy_values) #validation"
"0","  "
"0","  ##average recall"
"0","  mean_train_recall <- mean(train_recall_values) #train"
"0","  mean_valid_recall <- mean(valid_recall_values) #validation"
"0","  "
"0","  ##average PPV"
"0","  mean_train_ppv <- mean(train_ppv_values) #train"
"0","  mean_valid_ppv <- mean(valid_ppv_values) #validation"
"0","  "
"0","  ##average F1-score"
"0","  mean_train_f1 <- mean(train_f1_values) #train"
"0","  mean_valid_f1 <- mean(valid_f1_values) #validation"
"0",""
"0","  "
"0","  ###########################################"
"0","  "
"0","  # Store the results"
"0","  results <- rbind(results, data.frame(ntree = ntree, "
"0","                                       train_accuracy = mean_train_accuracy,"
"0","                                       valid_accuracy = mean_valid_accuracy,"
"0","                                       "
"0","                                       train_recall = mean_train_recall,"
"0","                                       valid_recall = mean_valid_recall,"
"0","                                       "
"0","                                       train_ppv = mean_train_ppv, "
"0","                                       valid_ppv = mean_valid_ppv,"
"0","                                       "
"0","                                       train_f1 = mean_train_f1, "
"0","                                       valid_f1 = mean_valid_f1))"
"0","}"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  42.31%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 57.69%"
"1"," 53.85%"
"1","
"
"1","   50:  40.87%"
"1"," 21.15%"
"1"," 30.77%"
"1"," 59.62%"
"1"," 51.92%"
"1","
"
"1","   75:  42.79%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 57.69%"
"1"," 55.77%"
"1","
"
"1","  100:  42.31%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 55.77%"
"1"," 55.77%"
"1","
"
"1","  125:  39.42%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 57.69%"
"1"," 51.92%"
"1","
"
"1","  150:  38.94%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 53.85%"
"1"," 53.85%"
"1","
"
"1","  175:  39.42%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 55.77%"
"1","
"
"1","  200:  39.42%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 53.85%"
"1","
"
"1","  225:  39.90%"
"1"," 23.08%"
"1"," 28.85%"
"1"," 53.85%"
"1"," 53.85%"
"1","
"
"1","  250:  38.46%"
"1"," 23.08%"
"1"," 28.85%"
"1"," 50.00%"
"1"," 51.92%"
"1","
"
"1","  275:  38.94%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 50.00%"
"1"," 51.92%"
"1","
"
"1","  300:  39.42%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  325:  38.46%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  350:  38.46%"
"1"," 25.00%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  375:  37.98%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  400:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  425:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  450:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  475:  37.50%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 50.00%"
"1","
"
"1","  500:  37.50%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 50.00%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  45.19%"
"1"," 23.08%"
"1"," 48.08%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","   50:  36.54%"
"1"," 25.00%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","   75:  36.06%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 53.85%"
"1","
"
"1","  100:  37.98%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  125:  34.62%"
"1"," 23.08%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  150:  37.02%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  175:  39.42%"
"1"," 30.77%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 59.62%"
"1","
"
"1","  200:  37.02%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  225:  37.50%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  250:  37.50%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 57.69%"
"1","
"
"1","  275:  37.50%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 59.62%"
"1","
"
"1","  300:  37.98%"
"1"," 26.92%"
"1"," 17.31%"
"1"," 48.08%"
"1"," 59.62%"
"1","
"
"1","  325:  37.50%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 59.62%"
"1","
"
"1","  350:  36.54%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  375:  36.06%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  400:  35.58%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  425:  35.58%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  450:  35.58%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  475:  35.10%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 51.92%"
"1","
"
"1","  500:  36.54%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  38.94%"
"1"," 23.08%"
"1"," 48.08%"
"1"," 28.85%"
"1"," 55.77%"
"1","
"
"1","   50:  36.54%"
"1"," 23.08%"
"1"," 30.77%"
"1"," 42.31%"
"1"," 50.00%"
"1","
"
"1","   75:  35.10%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 50.00%"
"1","
"
"1","  100:  36.54%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 50.00%"
"1"," 48.08%"
"1","
"
"1","  125:  33.17%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  150:  33.17%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  175:  32.69%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  200:  32.69%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  225:  33.65%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 44.23%"
"1","
"
"1","  250:  34.62%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 44.23%"
"1","
"
"1","  275:  33.65%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  300:  34.13%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  325:  34.13%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  350:  35.10%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  375:  34.13%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 44.23%"
"1","
"
"1","  400:  34.62%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  425:  34.62%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 44.23%"
"1"," 44.23%"
"1","
"
"1","  450:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  475:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  500:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  43.75%"
"1"," 40.38%"
"1"," 21.15%"
"1"," 51.92%"
"1"," 61.54%"
"1","
"
"1","   50:  41.83%"
"1"," 32.69%"
"1"," 21.15%"
"1"," 50.00%"
"1"," 63.46%"
"1","
"
"1","   75:  40.87%"
"1"," 36.54%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 59.62%"
"1","
"
"1","  100:  41.83%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 55.77%"
"1"," 57.69%"
"1","
"
"1","  125:  43.27%"
"1"," 34.62%"
"1"," 21.15%"
"1"," 57.69%"
"1"," 59.62%"
"1","
"
"1","  150:  39.90%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 61.54%"
"1","
"
"1","  175:  40.87%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  200:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  225:  39.90%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  250:  39.42%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 46.15%"
"1"," 61.54%"
"1","
"
"1","  275:  39.42%"
"1"," 34.62%"
"1"," 15.38%"
"1"," 48.08%"
"1"," 59.62%"
"1","
"
"1","  300:  39.42%"
"1"," 34.62%"
"1"," 17.31%"
"1"," 46.15%"
"1"," 59.62%"
"1","
"
"1","  325:  39.90%"
"1"," 34.62%"
"1"," 15.38%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  350:  38.94%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 44.23%"
"1"," 61.54%"
"1","
"
"1","  375:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  400:  39.42%"
"1"," 32.69%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  425:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 40.38%"
"1"," 63.46%"
"1","
"
"1","  450:  39.42%"
"1"," 32.69%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","  475:  39.90%"
"1"," 34.62%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","  500:  39.90%"
"1"," 34.62%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  43.75%"
"1"," 28.85%"
"1"," 57.69%"
"1"," 38.46%"
"1"," 50.00%"
"1","
"
"1","   50:  37.98%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","   75:  36.06%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 40.38%"
"1"," 50.00%"
"1","
"
"1","  100:  37.02%"
"1"," 26.92%"
"1"," 28.85%"
"1"," 40.38%"
"1"," 51.92%"
"1","
"
"1","  125:  37.98%"
"1"," 26.92%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  150:  37.02%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  175:  37.50%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 48.08%"
"1"," 53.85%"
"1","
"
"1","  200:  34.62%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 50.00%"
"1","
"
"1","  225:  37.50%"
"1"," 28.85%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  250:  35.58%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 55.77%"
"1","
"
"1","  275:  36.06%"
"1"," 30.77%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 55.77%"
"1","
"
"1","  300:  36.54%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 38.46%"
"1"," 55.77%"
"1","
"
"1","  325:  36.54%"
"1"," 34.62%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 53.85%"
"1","
"
"1","  350:  34.62%"
"1"," 30.77%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 48.08%"
"1","
"
"1","  375:  34.13%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 48.08%"
"1","
"
"1","  400:  33.17%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","  425:  33.17%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","  450:  32.69%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  475:  33.17%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  500:  32.69%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  42.31%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 57.69%"
"1"," 53.85%"
"1","
"
"1","   50:  40.87%"
"1"," 21.15%"
"1"," 30.77%"
"1"," 59.62%"
"1"," 51.92%"
"1","
"
"1","   75:  42.79%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 57.69%"
"1"," 55.77%"
"1","
"
"1","  100:  42.31%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 55.77%"
"1"," 55.77%"
"1","
"
"1","  125:  39.42%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 57.69%"
"1"," 51.92%"
"1","
"
"1","  150:  38.94%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 53.85%"
"1"," 53.85%"
"1","
"
"1","  175:  39.42%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 55.77%"
"1","
"
"1","  200:  39.42%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 53.85%"
"1","
"
"1","  225:  39.90%"
"1"," 23.08%"
"1"," 28.85%"
"1"," 53.85%"
"1"," 53.85%"
"1","
"
"1","  250:  38.46%"
"1"," 23.08%"
"1"," 28.85%"
"1"," 50.00%"
"1"," 51.92%"
"1","
"
"1","  275:  38.94%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 50.00%"
"1"," 51.92%"
"1","
"
"1","  300:  39.42%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  325:  38.46%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  350:  38.46%"
"1"," 25.00%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  375:  37.98%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  400:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  425:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  450:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  475:  37.50%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 50.00%"
"1","
"
"1","  500:  37.50%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 50.00%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  45.19%"
"1"," 23.08%"
"1"," 48.08%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","   50:  36.54%"
"1"," 25.00%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","   75:  36.06%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 53.85%"
"1","
"
"1","  100:  37.98%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  125:  34.62%"
"1"," 23.08%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  150:  37.02%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  175:  39.42%"
"1"," 30.77%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 59.62%"
"1","
"
"1","  200:  37.02%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  225:  37.50%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  250:  37.50%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 57.69%"
"1","
"
"1","  275:  37.50%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 59.62%"
"1","
"
"1","  300:  37.98%"
"1"," 26.92%"
"1"," 17.31%"
"1"," 48.08%"
"1"," 59.62%"
"1","
"
"1","  325:  37.50%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 59.62%"
"1","
"
"1","  350:  36.54%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  375:  36.06%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  400:  35.58%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  425:  35.58%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  450:  35.58%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  475:  35.10%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 51.92%"
"1","
"
"1","  500:  36.54%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  38.94%"
"1"," 23.08%"
"1"," 48.08%"
"1"," 28.85%"
"1"," 55.77%"
"1","
"
"1","   50:  36.54%"
"1"," 23.08%"
"1"," 30.77%"
"1"," 42.31%"
"1"," 50.00%"
"1","
"
"1","   75:  35.10%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 50.00%"
"1","
"
"1","  100:  36.54%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 50.00%"
"1"," 48.08%"
"1","
"
"1","  125:  33.17%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  150:  33.17%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  175:  32.69%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  200:  32.69%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  225:  33.65%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 44.23%"
"1","
"
"1","  250:  34.62%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 44.23%"
"1","
"
"1","  275:  33.65%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  300:  34.13%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  325:  34.13%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  350:  35.10%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  375:  34.13%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 44.23%"
"1","
"
"1","  400:  34.62%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  425:  34.62%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 44.23%"
"1"," 44.23%"
"1","
"
"1","  450:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  475:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  500:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  43.75%"
"1"," 40.38%"
"1"," 21.15%"
"1"," 51.92%"
"1"," 61.54%"
"1","
"
"1","   50:  41.83%"
"1"," 32.69%"
"1"," 21.15%"
"1"," 50.00%"
"1"," 63.46%"
"1","
"
"1","   75:  40.87%"
"1"," 36.54%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 59.62%"
"1","
"
"1","  100:  41.83%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 55.77%"
"1"," 57.69%"
"1","
"
"1","  125:  43.27%"
"1"," 34.62%"
"1"," 21.15%"
"1"," 57.69%"
"1"," 59.62%"
"1","
"
"1","  150:  39.90%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 61.54%"
"1","
"
"1","  175:  40.87%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  200:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  225:  39.90%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  250:  39.42%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 46.15%"
"1"," 61.54%"
"1","
"
"1","  275:  39.42%"
"1"," 34.62%"
"1"," 15.38%"
"1"," 48.08%"
"1"," 59.62%"
"1","
"
"1","  300:  39.42%"
"1"," 34.62%"
"1"," 17.31%"
"1"," 46.15%"
"1"," 59.62%"
"1","
"
"1","  325:  39.90%"
"1"," 34.62%"
"1"," 15.38%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  350:  38.94%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 44.23%"
"1"," 61.54%"
"1","
"
"1","  375:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  400:  39.42%"
"1"," 32.69%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  425:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 40.38%"
"1"," 63.46%"
"1","
"
"1","  450:  39.42%"
"1"," 32.69%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","  475:  39.90%"
"1"," 34.62%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","  500:  39.90%"
"1"," 34.62%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  43.75%"
"1"," 28.85%"
"1"," 57.69%"
"1"," 38.46%"
"1"," 50.00%"
"1","
"
"1","   50:  37.98%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","   75:  36.06%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 40.38%"
"1"," 50.00%"
"1","
"
"1","  100:  37.02%"
"1"," 26.92%"
"1"," 28.85%"
"1"," 40.38%"
"1"," 51.92%"
"1","
"
"1","  125:  37.98%"
"1"," 26.92%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  150:  37.02%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  175:  37.50%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 48.08%"
"1"," 53.85%"
"1","
"
"1","  200:  34.62%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 50.00%"
"1","
"
"1","  225:  37.50%"
"1"," 28.85%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  250:  35.58%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 55.77%"
"1","
"
"1","  275:  36.06%"
"1"," 30.77%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 55.77%"
"1","
"
"1","  300:  36.54%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 38.46%"
"1"," 55.77%"
"1","
"
"1","  325:  36.54%"
"1"," 34.62%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 53.85%"
"1","
"
"1","  350:  34.62%"
"1"," 30.77%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 48.08%"
"1","
"
"1","  375:  34.13%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 48.08%"
"1","
"
"1","  400:  33.17%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","  425:  33.17%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","  450:  32.69%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  475:  33.17%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  500:  32.69%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  42.31%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 57.69%"
"1"," 53.85%"
"1","
"
"1","   50:  40.87%"
"1"," 21.15%"
"1"," 30.77%"
"1"," 59.62%"
"1"," 51.92%"
"1","
"
"1","   75:  42.79%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 57.69%"
"1"," 55.77%"
"1","
"
"1","  100:  42.31%"
"1"," 25.00%"
"1"," 32.69%"
"1"," 55.77%"
"1"," 55.77%"
"1","
"
"1","  125:  39.42%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 57.69%"
"1"," 51.92%"
"1","
"
"1","  150:  38.94%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 53.85%"
"1"," 53.85%"
"1","
"
"1","  175:  39.42%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 55.77%"
"1","
"
"1","  200:  39.42%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 53.85%"
"1","
"
"1","  225:  39.90%"
"1"," 23.08%"
"1"," 28.85%"
"1"," 53.85%"
"1"," 53.85%"
"1","
"
"1","  250:  38.46%"
"1"," 23.08%"
"1"," 28.85%"
"1"," 50.00%"
"1"," 51.92%"
"1","
"
"1","  275:  38.94%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 50.00%"
"1"," 51.92%"
"1","
"
"1","  300:  39.42%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  325:  38.46%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  350:  38.46%"
"1"," 25.00%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  375:  37.98%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  400:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  425:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 53.85%"
"1"," 50.00%"
"1","
"
"1","  450:  37.98%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 51.92%"
"1","
"
"1","  475:  37.50%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 50.00%"
"1","
"
"1","  500:  37.50%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 51.92%"
"1"," 50.00%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  45.19%"
"1"," 23.08%"
"1"," 48.08%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","   50:  36.54%"
"1"," 25.00%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","   75:  36.06%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 53.85%"
"1","
"
"1","  100:  37.98%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  125:  34.62%"
"1"," 23.08%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  150:  37.02%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  175:  39.42%"
"1"," 30.77%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 59.62%"
"1","
"
"1","  200:  37.02%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  225:  37.50%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  250:  37.50%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 57.69%"
"1","
"
"1","  275:  37.50%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 59.62%"
"1","
"
"1","  300:  37.98%"
"1"," 26.92%"
"1"," 17.31%"
"1"," 48.08%"
"1"," 59.62%"
"1","
"
"1","  325:  37.50%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 59.62%"
"1","
"
"1","  350:  36.54%"
"1"," 26.92%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 55.77%"
"1","
"
"1","  375:  36.06%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  400:  35.58%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  425:  35.58%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  450:  35.58%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","  475:  35.10%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 51.92%"
"1","
"
"1","  500:  36.54%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 51.92%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  38.94%"
"1"," 23.08%"
"1"," 48.08%"
"1"," 28.85%"
"1"," 55.77%"
"1","
"
"1","   50:  36.54%"
"1"," 23.08%"
"1"," 30.77%"
"1"," 42.31%"
"1"," 50.00%"
"1","
"
"1","   75:  35.10%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 50.00%"
"1","
"
"1","  100:  36.54%"
"1"," 25.00%"
"1"," 23.08%"
"1"," 50.00%"
"1"," 48.08%"
"1","
"
"1","  125:  33.17%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  150:  33.17%"
"1"," 23.08%"
"1"," 23.08%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  175:  32.69%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  200:  32.69%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  225:  33.65%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 44.23%"
"1","
"
"1","  250:  34.62%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 44.23%"
"1","
"
"1","  275:  33.65%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  300:  34.13%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 40.38%"
"1"," 46.15%"
"1","
"
"1","  325:  34.13%"
"1"," 21.15%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  350:  35.10%"
"1"," 25.00%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  375:  34.13%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 44.23%"
"1","
"
"1","  400:  34.62%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  425:  34.62%"
"1"," 23.08%"
"1"," 26.92%"
"1"," 44.23%"
"1"," 44.23%"
"1","
"
"1","  450:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  475:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","  500:  33.65%"
"1"," 19.23%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  43.75%"
"1"," 40.38%"
"1"," 21.15%"
"1"," 51.92%"
"1"," 61.54%"
"1","
"
"1","   50:  41.83%"
"1"," 32.69%"
"1"," 21.15%"
"1"," 50.00%"
"1"," 63.46%"
"1","
"
"1","   75:  40.87%"
"1"," 36.54%"
"1"," 23.08%"
"1"," 44.23%"
"1"," 59.62%"
"1","
"
"1","  100:  41.83%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 55.77%"
"1"," 57.69%"
"1","
"
"1","  125:  43.27%"
"1"," 34.62%"
"1"," 21.15%"
"1"," 57.69%"
"1"," 59.62%"
"1","
"
"1","  150:  39.90%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 44.23%"
"1"," 61.54%"
"1","
"
"1","  175:  40.87%"
"1"," 34.62%"
"1"," 19.23%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  200:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  225:  39.90%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  250:  39.42%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 46.15%"
"1"," 61.54%"
"1","
"
"1","  275:  39.42%"
"1"," 34.62%"
"1"," 15.38%"
"1"," 48.08%"
"1"," 59.62%"
"1","
"
"1","  300:  39.42%"
"1"," 34.62%"
"1"," 17.31%"
"1"," 46.15%"
"1"," 59.62%"
"1","
"
"1","  325:  39.90%"
"1"," 34.62%"
"1"," 15.38%"
"1"," 48.08%"
"1"," 61.54%"
"1","
"
"1","  350:  38.94%"
"1"," 32.69%"
"1"," 17.31%"
"1"," 44.23%"
"1"," 61.54%"
"1","
"
"1","  375:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  400:  39.42%"
"1"," 32.69%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 61.54%"
"1","
"
"1","  425:  38.94%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 40.38%"
"1"," 63.46%"
"1","
"
"1","  450:  39.42%"
"1"," 32.69%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","  475:  39.90%"
"1"," 34.62%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","  500:  39.90%"
"1"," 34.62%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 59.62%"
"1","
"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  43.75%"
"1"," 28.85%"
"1"," 57.69%"
"1"," 38.46%"
"1"," 50.00%"
"1","
"
"1","   50:  37.98%"
"1"," 21.15%"
"1"," 42.31%"
"1"," 42.31%"
"1"," 46.15%"
"1","
"
"1","   75:  36.06%"
"1"," 25.00%"
"1"," 28.85%"
"1"," 40.38%"
"1"," 50.00%"
"1","
"
"1","  100:  37.02%"
"1"," 26.92%"
"1"," 28.85%"
"1"," 40.38%"
"1"," 51.92%"
"1","
"
"1","  125:  37.98%"
"1"," 26.92%"
"1"," 26.92%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  150:  37.02%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 42.31%"
"1"," 55.77%"
"1","
"
"1","  175:  37.50%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 48.08%"
"1"," 53.85%"
"1","
"
"1","  200:  34.62%"
"1"," 23.08%"
"1"," 25.00%"
"1"," 40.38%"
"1"," 50.00%"
"1","
"
"1","  225:  37.50%"
"1"," 28.85%"
"1"," 25.00%"
"1"," 42.31%"
"1"," 53.85%"
"1","
"
"1","  250:  35.58%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 55.77%"
"1","
"
"1","  275:  36.06%"
"1"," 30.77%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 55.77%"
"1","
"
"1","  300:  36.54%"
"1"," 32.69%"
"1"," 19.23%"
"1"," 38.46%"
"1"," 55.77%"
"1","
"
"1","  325:  36.54%"
"1"," 34.62%"
"1"," 21.15%"
"1"," 36.54%"
"1"," 53.85%"
"1","
"
"1","  350:  34.62%"
"1"," 30.77%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 48.08%"
"1","
"
"1","  375:  34.13%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 48.08%"
"1","
"
"1","  400:  33.17%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","  425:  33.17%"
"1"," 28.85%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"1","  450:  32.69%"
"1"," 26.92%"
"1"," 21.15%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  475:  33.17%"
"1"," 28.85%"
"1"," 21.15%"
"1"," 38.46%"
"1"," 44.23%"
"1","
"
"1","  500:  32.69%"
"1"," 26.92%"
"1"," 23.08%"
"1"," 36.54%"
"1"," 44.23%"
"1","
"
"0","################################################################################"
"0",""
"0","#rename models"
"0","rownames(results) = paste0(""BoW RF model "", 1:nrow(results))"
"0",""
"0","#check for optimal model with best train and validation f1-scores"
"0","best_results = results %>% filter(train_f1 > 0.5 & valid_f1> 0.5) %>% select(ntree,"
"0"," "
"0","                                train_f1, valid_f1, train_accuracy, valid_accuracy,"
"0","                                                        train_recall, valid_recall,  train_ppv, valid_ppv)%>%"
"0","                                                        arrange(desc(train_f1),"
"0","                                                                desc(valid_f1))"
"0",""
"0",""
"0","################################################################################"
"0",""
"0","#re-fit the best model on entire train set"
"0","set.seed(123)"
"0","rf_fit <- randomForest(as.factor(president_label) ~ ., data=df_train,"
"0","                   ntree = 500, "
"0","                   importance = TRUE,"
"0","                   na.action = na.exclude,"
"0","                    do.trace = 25)"
"1","ntree      OOB"
"1","      1"
"1","      2"
"1","      3"
"1","      4"
"1","
"
"1","   25:  37.31%"
"1"," 21.54%"
"1"," 23.08%"
"1"," 49.23%"
"1"," 55.38%"
"1","
"
"1","   50:  36.54%"
"1"," 21.54%"
"1"," 21.54%"
"1"," 47.69%"
"1"," 55.38%"
"1","
"
"1","   75:  35.77%"
"1"," 16.92%"
"1"," 23.08%"
"1"," 47.69%"
"1"," 55.38%"
"1","
"
"1","  100:  36.54%"
"1"," 15.38%"
"1"," 24.62%"
"1"," 47.69%"
"1"," 58.46%"
"1","
"
"1","  125:  35.38%"
"1"," 16.92%"
"1"," 20.00%"
"1"," 47.69%"
"1"," 56.92%"
"1","
"
"1","  150:  36.15%"
"1"," 18.46%"
"1"," 21.54%"
"1"," 49.23%"
"1"," 55.38%"
"1","
"
"1","  175:  36.54%"
"1"," 16.92%"
"1"," 23.08%"
"1"," 49.23%"
"1"," 56.92%"
"1","
"
"1","  200:  36.54%"
"1"," 18.46%"
"1"," 23.08%"
"1"," 47.69%"
"1"," 56.92%"
"1","
"
"1","  225:  35.38%"
"1"," 16.92%"
"1"," 21.54%"
"1"," 47.69%"
"1"," 55.38%"
"1","
"
"1","  250:  35.38%"
"1"," 16.92%"
"1"," 21.54%"
"1"," 49.23%"
"1"," 53.85%"
"1","
"
"1","  275:  35.38%"
"1"," 16.92%"
"1"," 23.08%"
"1"," 49.23%"
"1"," 52.31%"
"1","
"
"1","  300:  35.77%"
"1"," 15.38%"
"1"," 23.08%"
"1"," 49.23%"
"1"," 55.38%"
"1","
"
"1","  325:  35.77%"
"1"," 15.38%"
"1"," 21.54%"
"1"," 49.23%"
"1"," 56.92%"
"1","
"
"1","  350:  35.00%"
"1"," 15.38%"
"1"," 21.54%"
"1"," 49.23%"
"1"," 53.85%"
"1","
"
"1","  375:  34.23%"
"1"," 15.38%"
"1"," 21.54%"
"1"," 47.69%"
"1"," 52.31%"
"1","
"
"1","  400:  34.62%"
"1"," 15.38%"
"1"," 23.08%"
"1"," 47.69%"
"1"," 52.31%"
"1","
"
"1","  425:  34.62%"
"1"," 13.85%"
"1"," 23.08%"
"1"," 47.69%"
"1"," 53.85%"
"1","
"
"1","  450:  35.38%"
"1"," 16.92%"
"1"," 21.54%"
"1"," 47.69%"
"1"," 55.38%"
"1","
"
"1","  475:  35.00%"
"1"," 15.38%"
"1"," 21.54%"
"1"," 47.69%"
"1"," 55.38%"
"1","
"
"1","  500:  35.77%"
"1"," 16.92%"
"1"," 23.08%"
"1"," 47.69%"
"1"," 55.38%"
"1","
"
"0","###############################################################################"
"0",""
"0","#prediction on test data"
"0","set.seed(123)"
"0","fittedtest <- predict(rf_fit, df_test, type = 'class')"
"0",""
"0","#test confusion matrix"
"0","test_conf_mat <- confusionMatrix(data=fittedtest, #predicted data"
"0","                                 reference=as.factor(df_test$president_label), #reference data"
"0","                                 mode = ""everything"") #all metrics"
"0",""
"0","#ensure Nan and NA values are 0"
"0","test_conf_mat$byClass[is.na(test_conf_mat$byClass)] <- 0"
"0","test_conf_mat$byClass[is.nan(test_conf_mat$byClass)] <- 0"
"0",""
"0","# Compute the test accuracy"
"0","all_results[2, ""test_accuracy""] <- round(test_conf_mat$overall['Accuracy'], 3)"
"0",""
"0","# Compute the test recall"
"0","all_results[2, ""test_recall""] <- round(mean(test_conf_mat$byClass[,'Sensitivity']), 3)"
"0",""
"0","# Compute the test positive predictive value or ""precision"""
"0","# Compute the test positive predictive value or ""precision"""
"0","all_results[2, ""test_ppv""] <- round(mean(test_conf_mat$byClass[,'Pos Pred Value']), 3)"
"0",""
"0","# Compute the test F1-score"
"0","all_results[2, ""test_f1""] <- round(mean(test_conf_mat$byClass[,'F1']), 3)"
"0",""
"0","#model ID of best sub model"
"0","#all_results[2, ""model_ID""] = rownames(best_results)[1]"
"0",""
"0","#parameters of best sub model"
"0","#all_results[1, ""parameters""] = rownames(best_results)[1]"
"0",""
